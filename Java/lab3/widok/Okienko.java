/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.zadanie4.widok;


import java.util.List;

import java.util.stream.Collectors;

import javax.swing.JFrame;


/**
 *Represents the view gui application
 *@author Agata Przykaza
 * @version 1.0
 */
public class Okienko extends javax.swing.JFrame {
    /**
     * State of succes button and input
     */
   private boolean przyciskState=false;

   /**
    * Button state
    */
   private boolean buttonpushed=false;
   
    /**
     * Creates new form Okienko
     */
    
    public Okienko() {
        initComponents();

    }
    
    /**
     * Create show gui
     */

     public  void createAndShowGUI() {        
        //ustawienie ladnego wygladu okien
        JFrame.setDefaultLookAndFeelDecorated(true);

		//utworzenie i przygotowanie okna
        JFrame frame = new JFrame("ButtonHtmlDemo");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		//utworzenie i przygotowanie panelu
        Okienko newContentPane = new Okienko();
        //panel widoczny
        //newContentPane.setOpaque(true); 
        frame.setContentPane(newContentPane);

        //wyswietlenie okna
        frame.pack();
        frame.setVisible(true);
    }
     
     /**
      * Show options of game
      * @param opcjeLos options in String
      */
    public void wyswietlOpcje(List<String> opcjeLos)
    {
            mozliwosc.setText("Mozliwosci losowania:");
          opcjaLotto.setText("1 "+opcjeLos.get(0));
           opcjaMulti.setText("2 "+opcjeLos.get(1));
           opcjaMini.setText("3 "+opcjeLos.get(2));
          
  
        
    }
    
  
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        przycisk = new javax.swing.JButton();
        opcja = new javax.swing.JTextField();
        error = new javax.swing.JLabel();
        nazwa = new javax.swing.JLabel();
        mozliwosc = new javax.swing.JLabel();
        opcjaLotto = new javax.swing.JLabel();
        opcjaMulti = new javax.swing.JLabel();
        opcjaMini = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        przycisk.setText("Graj");
        przycisk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                przyciskActionPerformed(evt);
            }
        });

        opcja.setText("Numer gry");
        opcja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcjaActionPerformed(evt);
            }
        });

        error.setText("Brak bledu");

        nazwa.setText("Loteria");

        mozliwosc.setText("jLabel2");

        opcjaLotto.setText("jLabel3");

        opcjaMulti.setText("jLabel4");

        opcjaMini.setText("jLabel5");

        tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        tab.setRowHeight(40);
        jScrollPane2.setViewportView(tab);

        jLabel1.setText("Wpisz numer gry:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(374, 374, 374)
                        .addComponent(nazwa))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mozliwosc)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(opcjaLotto)
                                    .addComponent(opcjaMulti)
                                    .addComponent(opcjaMini))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(93, 93, 93))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(error)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(opcja, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addComponent(przycisk)
                .addGap(66, 66, 66))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(nazwa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mozliwosc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(opcjaLotto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(opcjaMulti)
                        .addGap(15, 15, 15)
                        .addComponent(opcjaMini))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(error)
                    .addComponent(opcja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(przycisk))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void opcjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcjaActionPerformed
        // TODO add your handling code here:
 
    }//GEN-LAST:event_opcjaActionPerformed
    /**
     * Set button disable
     */
    
    public void setButtonDisable()
    {
        przycisk.setEnabled(false);
    }
    /**
     * Show lottery score in table
     * @param s score
     * @param opcja option
     */
    public void showWynik(String s,String opcja)
    {
        //wynik.setText(s);
      
        tab.getColumnModel().getColumn(0).setHeaderValue(opcja);
        tab.setValueAt(s, 0, 0);
        
        
    }
    
    /**
     * Show numbers in string
     * @param wynik numbers generated
     * @return String number in string
     */
    public String wyswietlNumery(List<Integer> wynik)
   {    
       
        String tmp="";
      
      wynik=wynik.stream()
              .sorted() 
              .collect(Collectors.toList());
      
       for(Integer i:wynik)
       {
           tmp+=i.toString()+", ";
           
       }
       
       return tmp;
   }
    
    /**
     * Check if string is int number
     * @param sc string for check
     * @return 
     */
    public boolean checkCzyInt(String sc)
    {
        
         try {
        Integer.parseInt(sc);
        return true;
    } catch (final NumberFormatException e) {
        return false;
    }
    }
    
    /**
     * Gives error message
     * @param type error type 
     */
    public void errorMessage(int... type)
       {    String message="";
           for(int i:type)
           {
               if(i==1)
               {
                   
                   message="Bad number of parameters 0 or more than 1! ";
               }
                if(i==2)
               {
                   message="Parameter not int!!!! ";
               }
                 if(i==3)
               {
                   message="Bad parameter choose intger: 1-3 ";
               }
                 if(i==4)
               {
                   message="Game ended";
               }
                if(i==5)
                {
                    message="Error in program";
                }
           }
            error.setText(message);
           
       }
    
    /**
     * Get button/input state
     * @return 
     */
    public boolean getPrzyciskState()
    {
        return przyciskState;
    }
    /**
     * Get button state
     * @return 
     */
    public boolean getPrzyciskPush()
    {
        return buttonpushed;
    }
   
    /**
     * Action on button
     * @param evt 
     */
    private void przyciskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_przyciskActionPerformed
        // TODO add your handling code here:
        buttonpushed=true;
        if(checkCzyInt(opcja.getText())==false)
        {
            errorMessage(2);
        }
        else{
           Integer o=Integer.parseInt(opcja.getText());
       
            if(o<=3&&o>=1)
            {   errorMessage();
                przyciskState=true;
               
                  
            }
            else
            {
                errorMessage(3);
            }
     
        }
        
        
    }//GEN-LAST:event_przyciskActionPerformed
    /**
     * Return chosen option
     * @return 
     */
    public Integer giveOptionChosen()
    {
        if(przyciskState==true)
        {
            return Integer.parseInt(opcja.getText());
        }
        
        return 0;
    }
    
    /**
     * @param args the command line arguments
     */

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel error;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel mozliwosc;
    private javax.swing.JLabel nazwa;
    private javax.swing.JTextField opcja;
    private javax.swing.JLabel opcjaLotto;
    private javax.swing.JLabel opcjaMini;
    private javax.swing.JLabel opcjaMulti;
    private javax.swing.JButton przycisk;
    private javax.swing.JTable tab;
    // End of variables declaration//GEN-END:variables
}
